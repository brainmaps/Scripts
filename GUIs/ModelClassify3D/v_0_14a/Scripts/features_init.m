global features data


%{
features structure
    .result
        .matrixed {}
        .listed []
        .names {}
        .namesCalculated {}
    .pFeatures
        .parameters {}
        .parameterNames {}
        .methods {}
        .subFeatures {}
        .scriptPath
    --- in GUI use only ---
    .available
    .subFeatures
    .defaults
    .parameterNames
    .inUse
    ---
%}



features.prefType = WS.prefType;

features.available = { ...
    'Divergence', ... 
    'Gaussian', ... 
    'HessianSp', ... 
    'Hessian', ... 
    'DiffSimVes', ... 
    'Gradient', ... 
    'GradientM', ... 
    'MexicanHat', ...
    'HessianSum', ...
    'HessianProduct', ...
    'HessianGeometricMean', ...
    'HessianSumOfNorm', ...
    'HessianProductOfNorm', ...
    'HessianSums', ...
    'HessianProducts', ...
    'WS size'};
features.defaults = { ...
    {0.5, 1.0, 1, 0, 0, 0, 0}, ... 
    {1.5, 1, 0, 0, 0, 0}, ... 
    {1.5, 1, 0, 0, 0, 0}, ... 
    {1.5, 1, 0, 0, 0, 0}, ... 
    {0.5, 1.0, 1.5, 1.5, 1, 0, 0, 0, 0}, ... 
    {1.5, 1, 0, 0, 0, 0}, ... 
    {1.5, 1, 0 ,0 ,0 ,0}, ... 
    {1.5, 1, 0, 0, 0, 0}, ... 
    {1.5, 1, 0, 0, 0, 0}, ... 
    {1.5, 1, 0, 0, 0, 0}, ... 
    {1.5, 1, 0, 0, 0, 0}, ... 
    {1.5, 1, 0, 0, 0, 0}, ... 
    {1.5, 1, 0, 0, 0, 0}, ... 
    {1.5, 1, 0, 0, 0, 0}, ... 
    {1.5, 1, 0, 0, 0, 0}, ... 
    {[]}}; 
features.subFeatures = { ...
    {''}, ... 
    {''}, ... 
    {'iL1L2L3'}, ... 
    {'L1', 'L2', 'L3'}, ... 
    {''}, ... 
    {'y', 'x', 'z'}, ... 
    {'Magnitude'}, ... 
    {''}, ... 
    {''}, ... 
    {''}, ... 
    {''}, ... 
    {''}, ... 
    {''}, ... 
    {'Sum', 'SumOfNormalized', 'SumOfNormiL1L2L3', 'SumOfNormL1iL2L3', 'SumOfNormL1L2iL3'}, ... 
    {'Product', 'ProductOfNormalized', 'ProductOfNormiL1L2L3', 'ProductOfNormL1iL2L3', 'ProductOfNormL1L2iL3'}, ... 
    {''}};
features.parameterNames = { ...
    {'Sigma (GF)', 'Sigma (divergence)', 'F: Intensity at seed', 'F: Mean', 'F: Standard derivation', 'F: Minimum', 'F: Maximum'}, ... 
    {'Sigma', 'F: Intensity at seed', 'F: Mean', 'F: Standard derivation', 'F: Minimum', 'F: Maximum'}, ... 
    {'Sigma', 'F: Intensity at seed', 'F: Mean', 'F: Standard derivation', 'F: Minimum', 'F: Maximum'}, ... 
    {'Sigma', 'F: Intensity at seed', 'F: Mean', 'F: Standard derivation', 'F: Minimum', 'F: Maximum'}, ... 
    {'Sigma (GF)', 'Sigma (divergence)', 'Sigma (Gaussian)', 'Sigma (mexican)', 'F: Intensity at seed', 'F: Mean', 'F: Standard derivation', 'F: Minimum', 'F: Maximum'}, ... 
    {'Sigma', 'F: Intensity at seed', 'F: Mean', 'F: Standard derivation', 'F: Minimum', 'F: Maximum'}, ... 
    {'Sigma', 'F: Intensity at seed', 'F: Mean', 'F: Standard derivation', 'F: Minimum', 'F: Maximum'}, ... 
    {'Sigma', 'F: Intensity at seed', 'F: Mean', 'F: Standard derivation', 'F: Minimum', 'F: Maximum'}, ... 
    {'Sigma', 'F: Intensity at seed', 'F: Mean', 'F: Standard derivation', 'F: Minimum', 'F: Maximum'}, ... 
    {'Sigma', 'F: Intensity at seed', 'F: Mean', 'F: Standard derivation', 'F: Minimum', 'F: Maximum'}, ... 
    {'Sigma', 'F: Intensity at seed', 'F: Mean', 'F: Standard derivation', 'F: Minimum', 'F: Maximum'}, ... 
    {'Sigma', 'F: Intensity at seed', 'F: Mean', 'F: Standard derivation', 'F: Minimum', 'F: Maximum'}, ... 
    {'Sigma', 'F: Intensity at seed', 'F: Mean', 'F: Standard derivation', 'F: Minimum', 'F: Maximum'}, ... 
    {'Sigma', 'F: Intensity at seed', 'F: Mean', 'F: Standard derivation', 'F: Minimum', 'F: Maximum'}, ... 
    {'Sigma', 'F: Intensity at seed', 'F: Mean', 'F: Standard derivation', 'F: Minimum', 'F: Maximum'}, ... 
    {[]}};

features.inUse{1} = 4;
features.pFeatures.parameters{1} = {1.5, 1, 0, 0, 0, 0};
features.pFeatures.methods = cellfun(@(x) features.available(x), features.inUse);
features.pFeatures.subFeatures = cellfun(@(x) features.subFeatures(x), features.inUse);
features.pFeatures.parameterNames = cellfun(@(x) features.parameterNames(x), features.inUse);
features.pFeatures.scriptPath = [data.folders.main data.folders.features];

